#suppress inspection "UnusedProperty" for whole file

# This config file is automatically loaded by each JexxaApplication if available.
# I recommend that you store your production environment in this file.
# Typically, you have to adjust some of these parameters when used for testing.
# In this case, you can override these settings in a separate properties file. For an example please see file
# jexxa-test.properties.
# The advantage of this approach is that:
# 1) The file should not be updated during development phase -> This prevents changes by accident
# 2) The difference between development and production setup becomes visible by a separate properties file

##########################################
#Settings for RESTfulRPCAdapter          #
##########################################
# HTTP related settings
io.jexxa.rest.host=0.0.0.0
io.jexxa.rest.port=7500

io.jexxa.rest.static_files_root=/web
io.jexxa.rest.static_files_external=false

# OpenAPI Support.
# Enable OpenAPI support by defining a path.
io.jexxa.rest.open_api_path=swagger-docs

##########################################
#Settings for JDBCConnection             #
##########################################
io.jexxa.jdbc.driver=org.postgresql.Driver
# TODO: Set project name as database name
io.jexxa.jdbc.url=jdbc:postgresql://postgres:5432/jexxatemplate

# Following setting is only required if you want to auto-create your database, and it is supported via connection URL. In this case you have to define a valid default URL
io.jexxa.jdbc.autocreate.database=jdbc:postgresql://postgres:5432/postgres
io.jexxa.jdbc.autocreate.table=true

io.jexxa.jdbc.username=postgres
io.jexxa.jdbc.password=admin

#IMPORTANT: Use docker secrets for production. Please note that this requires to configure the secrets within your docker environment
#io.jexxa.jdbc.file.username=/run/secrets/jdbcUser
#io.jexxa.jdbc.file.password=/run/secrets/jdbcPassword


######################################################
#Settings for JMSAdapter and JMSAdapter & JMSSender  #
######################################################
java.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory
#adjust this in case ActiveMQ is running on a different system

java.naming.provider.url=tcp://ActiveMQ:61616
java.naming.user=artemis
java.naming.password=simetraehcapa
#java.naming.file.user=/run/secrets/jndiUser
#java.naming.file.password=/run/secrets/jndiPassword


#######################################################
#Applicationm specific information                    #
#Here we get this information from maven properties   #
#######################################################
io.jexxa.context.name=${project.name}
io.jexxa.context.version=${project.version}
io.jexxa.context.repository=${project.scm.developerConnection}
io.jexxa.context.build.timestamp=${build.timestamp}
